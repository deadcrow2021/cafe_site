"""Initial migration

Revision ID: 1bb0d20c4ae5
Revises:
Create Date: 2025-07-07 12:03:48.137424

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = "1bb0d20c4ae5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "food",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column("description", sa.String(length=5000), nullable=True),
        sa.Column("food_type", sa.String(length=200), nullable=True),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            "ingredient_price_modifier",
            sa.Numeric(precision=10, scale=4),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ingredient",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "restaurant",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column("address", sa.String(length=5000), nullable=False),
        sa.Column("latitude", sa.Numeric(precision=9, scale=6), nullable=True),
        sa.Column("longitude", sa.Numeric(precision=9, scale=6), nullable=True),
        sa.Column("has_delivery", sa.Boolean(), nullable=False),
        sa.Column("has_takeaway", sa.Boolean(), nullable=False),
        sa.Column("has_dine_in", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column(
            "phone",
            sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20),
            nullable=False,
        ),
        sa.Column(
            "email", sqlalchemy_utils.types.email.EmailType(length=255), nullable=False
        ),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phone"),
    )
    op.create_table(
        "food_ingredient",
        sa.Column("food_id", sa.Integer(), nullable=False),
        sa.Column("ingredient_id", sa.Integer(), nullable=False),
        sa.Column("is_removable", sa.Boolean(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["food.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ingredient_id"],
            ["ingredient.id"],
        ),
        sa.PrimaryKeyConstraint("food_id", "ingredient_id"),
    )
    op.create_table(
        "menu_category",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column("display_order", sa.SmallInteger(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_address",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(length=1000), nullable=False),
        sa.Column("entrance", sa.String(length=20), nullable=False),
        sa.Column("floor", sa.SmallInteger(), nullable=False),
        sa.Column("apartment", sa.String(length=20), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_favorite",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("food_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["food.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.create_table(
        "working_hours",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("day_of_week", sa.SmallInteger(), nullable=False),
        sa.Column("opens_at", sa.Time(), nullable=False),
        sa.Column("closes_at", sa.Time(), nullable=False),
        sa.Column("break_start", sa.Time(), nullable=True),
        sa.Column("break_end", sa.Time(), nullable=True),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "category_food",
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("food_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["menu_category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["food.id"],
        ),
    )
    op.create_table(
        "order",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("total_price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("status", sa.String(length=100), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["user_address.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["restaurant.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_item",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("food_id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("final_price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["food.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["order.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "__order_item_added_ingredient",
        sa.Column("order_item_id", sa.Integer(), nullable=True),
        sa.Column("added_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["added_id"],
            ["ingredient.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_item_id"],
            ["order_item.id"],
        ),
    )
    op.create_table(
        "__order_item_removed_ingredient",
        sa.Column("order_item_id", sa.Integer(), nullable=True),
        sa.Column("removed_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["order_item_id"],
            ["order_item.id"],
        ),
        sa.ForeignKeyConstraint(
            ["removed_id"],
            ["ingredient.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("__order_item_removed_ingredient")
    op.drop_table("__order_item_added_ingredient")
    op.drop_table("order_item")
    op.drop_table("order")
    op.drop_table("category_food")
    op.drop_table("working_hours")
    op.drop_table("user_favorite")
    op.drop_table("user_address")
    op.drop_table("menu_category")
    op.drop_table("food_ingredient")
    op.drop_table("user")
    op.drop_table("restaurant")
    op.drop_table("ingredient")
    op.drop_table("food")
    # ### end Alembic commands ###
